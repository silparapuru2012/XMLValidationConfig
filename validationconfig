public interface ActionService {
    void performAction(XmlConfig xmlConfig, EmailService emailService);
}
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Service;

import java.util.Map;

@Service
public class XmlProcessingService {

    private static final Logger logger = LoggerFactory.getLogger(XmlProcessingService.class);

    private final Map<String, ActionService> actionServices;
    private final EmailService emailService;

    public XmlProcessingService(Map<String, ActionService> actionServices, EmailService emailService) {
        this.actionServices = actionServices;
        this.emailService = emailService;
    }

    public void processXMLFile(XmlConfig xmlConfig) {
        String action = xmlConfig.getAction().toLowerCase();

        if (actionServices.containsKey(action)) {
            actionServices.get(action).performAction(xmlConfig, emailService);
        } else {
            logger.info("Unknown action: {}", action);
        }
    }
}
@Service
public class UploadService implements ActionService {
    @Override
    public void performAction(XmlConfig xmlConfig, EmailService emailService) {
        // Implement upload logic
        // ...

        // Use emailService if needed
        emailService.sendEmail("Upload completed", "Files uploaded successfully!");
    }
}

@Service
public class DownloadService implements ActionService {
    @Override
    public void performAction(XmlConfig xmlConfig, EmailService emailService) {
        // Implement download logic
        // ...

        // Use emailService if needed
        emailService.sendEmail("Download completed", "Files downloaded successfully!");
    }
}

@Configuration
public class ServiceConfig {

    @Bean
    public UploadService uploadService() {
        return new UploadService();
    }

    @Bean
    public DownloadService downloadService() {
        return new DownloadService();
    }
}

